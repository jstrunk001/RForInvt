// Created by Microsoft (R) C/C++ Compiler Version 15.00.30729.01 (23b0432a).
//
// c:\development\nbel_cpp_dal\nbel_cpp_tester\release\nbel.tli
//
// Wrapper implementations for Win32 type library NBEL.tlb
// compiler-generated file created 03/17/11 at 12:19:44 - DO NOT EDIT!

#pragma once

//
// interface IManagedInterface wrapper method implementations
//

inline VARIANT_BOOL IManagedInterface::isValidEqnNum ( _bstr_t eqNum ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_isValidEqnNum(eqNum, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

inline double IManagedInterface::SolveEquation ( _bstr_t eqNum, double var1, double var2, double var3 ) {
    double _result = 0;
    HRESULT _hr = raw_SolveEquation(eqNum, var1, var2, var3, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

inline SAFEARRAY * IManagedInterface::GetSpeciesByRegion ( _bstr_t region ) {
    SAFEARRAY * _result = 0;
    HRESULT _hr = raw_GetSpeciesByRegion(region, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

inline SAFEARRAY * IManagedInterface::GetEqnNumbersbyInputs ( long spp, long component ) {
    SAFEARRAY * _result = 0;
    HRESULT _hr = raw_GetEqnNumbersbyInputs(spp, component, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

inline long IManagedInterface::GetSppCode ( _bstr_t spp ) {
    long _result = 0;
    HRESULT _hr = raw_GetSppCode(spp, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

inline _bstr_t IManagedInterface::GetCitation ( _bstr_t eqnNum ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetCitation(eqnNum, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

inline _bstr_t IManagedInterface::GetLocation ( _bstr_t eqnNum ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetLocation(eqnNum, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}
