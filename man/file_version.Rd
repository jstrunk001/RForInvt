% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/file_version.R
\name{file_version}
\alias{file_version}
\title{Create versioned file names for data}
\usage{
file_version(
  path,
  increment = F,
  version_markers = c(version = "VS", date = "DT"),
  version_sep = "_",
  version_digits = 4,
  version_stamp = format(Sys.time(), "\%Y\%m\%d_\%H\%M\%S"),
  return_all_versions = F
)
}
\arguments{
\item{path}{name of data file}

\item{increment}{T/F should function increment to new version}

\item{version_markers}{(optional)}

\item{version_sep}{(optional)}

\item{version_digits}{(optional)}

\item{version_stamp}{(optional)}

\item{return_all_versions}{(optional)}
}
\value{
<Delete and Replace>
}
\description{
Create versioned file names for data
 places files in a directory that looks like a file

 e.g.
   "c:/temp/data.txt" is a folder
   "c:/temp/data.txt/data._VS_0001_DT_20230530_152025.txt" is a version of the data in this folder
   "c:/temp/data.txt/data._VS_0002_DT_20230530_175025.txt is an updated version of the data in this folder
}
\details{
A convenient / simple way to track versions of data files. Simply
 provide the base file name and let this function increment in a folder
 based on the original file name. All parts and versions of files are visible
 in the folder with the original extension, but with appended versions. For
 most data iterations the version details are unneeded, but available easily
 in the folder if warranted. Just use  path = file_version("c:/somepath/somedata.csv")
 and then something like write.csv(data, path) ... Then to read the data,
 use the same approach. path = file_version("c:/somepath/somedata.csv") then
 dat = read.csv(path). If you make a change to the data and want to save it
 off, then simply path = file_version("c:/somepath/somedata.csv",increment=T)
 and a new dat = read.csv(path) will provide the updated version and data.

 Previously I found myself manually creation versions, vs_here = "V1_202300530"
 but this was fairly unreliable, and I had references to versions scattered
 everywhere.

 This program is free software but it is provided WITHOUT WARRANTY
 and with ABSOLUTELY NO GUARANTEE of fitness or functionality for any purpose;
 you can redistribute it and/or modify it under the terms of the GNU
 General Public License as published by the Free Software Foundation;
 either version 2 of the License, or (at your option) any later version.

\cr
Revision History
\tabular{ll}{
1.0 \tab 5/30/2023 created / implemented \cr
1.1 \tab date and revisions.. \cr
}
}
\examples{

   #continue revisions on same data file
     vs_test1 = file_version("c:/temp/dataNoIncrement.txt" , increment=F); vs_test1
     writeLines(letters,vs_test1)

   #update version every time
     vs_test2 = file_version("c:/temp/dataIncrement.txt" , increment=T); vs_test2
     writeLines(letters,vs_test2)


}
\seealso{
\code{\link{another_function}}\cr \code{\link{yet_another_function}}\cr
}
\author{
Some Body <some.body@somewhere.com>
}
