% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/knn_tools.R
\name{knn_tools}
\alias{knn_tools}
\alias{yai_id}
\alias{newtargets_id}
\alias{impute_id}
\alias{yai_weights}
\alias{tl_impute}
\alias{tl_impute_2}
\alias{yai_cv}
\title{helpers for tree list imputation, knn}
\usage{
yai_id(
  xNms = NULL,
  yNms = NULL,
  idNm = NULL,
  data = NULL,
  omity = NULL,
  dup_ids_remove = T,
  ...
)

newtargets_id(yai_mod, idNm, data, k = NULL, ann = NULL)

impute_id(newtargs_id, ...)

yai_weights(
  yaimod,
  dtype = c("invdist", "invdist2", "eq"),
  zero_dist = c("small", "min", "NA")
)

tl_impute(
  wts,
  idNm,
  cols_knn_id = "col_id",
  cols_knn_wt = "col_wt",
  trees,
  sort_targets = F,
  debug = F
)

tl_impute_2(
  wts,
  idNm,
  cols_knn_id = "col_id",
  cols_knn_wt = "col_wt",
  trees,
  debug = F
)

yai_cv(
  omit = 5,
  idNm,
  xNm,
  yNm,
  pdNm = NA,
  data,
  iter_max = 500,
  k = 5,
  debug = FALSE,
  method = "msn",
  min_rows = 15,
  method_impute = c("closest", "mean", "median", "dstWeighted"),
  ...
)
}
\arguments{
\item{idNm}{name of id field}

\item{data}{input data}

\item{omity}{optional: records to omit}

\item{...}{other arguments to ??}

\item{yai_mod}{model returned by yai_id}

\item{k}{?number of neighbors?}

\item{ann}{T/Fsee yai documentation

\cr\cr
\bold{impute_id() parameters:}}

\item{newtargs_id}{?}

\item{yaimod}{model returned by yai_id}

\item{dtype}{distance type}

\item{wts}{weights from ?}

\item{cols_knn_id}{col names of knn ids}

\item{cols_knn_wt}{col names of knn wts}

\item{debug}{T/F}

\item{omit}{observation to omit at time i}

\item{yNm}{?names of response fields}

\item{iter_max}{number of iterations max}

\item{method}{? distance approach?}

\item{id_x}{vector of auxiliary variable column names led by id variable}

\item{id_y}{vector of response variable column names led by id variable}

\item{id}{id column}

\item{zero_dist()}{how to deal with zero distances (e.g. when everything is zero)

\cr\cr
\bold{tl_impute parameters:}}

\item{env}{environment with weights in it}

\item{tr_pl}{tree records}

\item{x}{?}

\item{max_comb}{??}
}
\value{
yai_id: \cr
newtargets_id: \cr
impute_id: \cr
yai_weights: \cr
tl_impute: \cr
yai_cv: \cr
}
\description{
Series of helpers which in combination with the package yaImpute can be used to
perform tree-list imputation.
}
\details{
yaImpute has some funkiness (e.g using row names as an ID field... bad...) and cannot support
tree list imputation. The functions here facilitate that process

yai_id: Update of yai that replaces row names with record ids
newtargets_id: wrapper for newtargets that handles yai_id object
impute_id: impute response values to target locations - wrapper for 'impute()' in yaImpute handles id field more explicitly
yai_weights: Get weights associated with imputation objects
tl_impute: function to impute tree list based on knn model fitted between aerial attributes
yai_cv: peform crossvalidation on knn model




 This program is free software but it is provided WITHOUT WARRANTY
 and with ABSOLUTELY NO GUARANTEE of fitness or functionality for any purpose;
 you can redistribute it and/or modify it under the terms of the GNU
 General Public License as published by the Free Software Foundation;
 either version 2 of the License, or (at your option) any later version.



\cr

Revision History
\tabular{ll}{
1.0 \tab  2014 July 04 Import from Jacob's R Library\cr
1.0 \tab  2015  Jan 06 Add roxygen header \cr
}
}
\examples{

<Delete and Replace>




}
\seealso{
\code{\link{yaImpute}}\cr \code{\link{fit_pdf}}\cr
}
\author{
Jacob Strunk <Jacob.strunk@usgda.gov>
}
